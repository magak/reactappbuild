{"version":3,"sources":["components/MainAppBar.tsx","components/Copyright.tsx","core/components/PlayerCard.tsx","core/components/Dashboard.tsx","components/DeveloperBoard.tsx","components/Home.tsx","App.tsx","serviceWorker.ts","theme.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","MainAppBar","classes","React","useState","auth","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","aria-controls","aria-haspopup","onClick","event","currentTarget","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Copyright","Container","align","Date","getFullYear","maxWidth","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","PlayerCard","expanded","setExpanded","Card","CardHeader","Avatar","action","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","CardContent","paragraph","paper","width","height","rootBox","display","flexDirection","playersBox","margin","teamsBox","Dashboard","Paper","elevation","Box","overflow","border","borderRadius","borderColor","palette","secondary","main","mainBox","left","right","top","bottom","wideScrenMode","button","textField","DeveloperBoard","useMediaQuery","p","m","Button","TextField","label","multiline","defaultValue","fullWidth","bgcolor","mainPanel","dashboard","developerBoard","HomePage","App","window","location","hostname","match","createMuiTheme","primary","error","A400","background","default","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.da172147.chunk.js","sourcesContent":["/*\r\nimport React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nexport interface MainAppBarProps {};\r\n\r\ninterface MainAppBarState {};\r\n\r\nclass MainAppBar extends React.Component<MainAppBarProps, MainAppBarState> {\r\n    render() {\r\n        return (\r\n          <AppBar position=\"fixed\" color=\"primary\" >\r\n            <Toolbar></Toolbar>\r\n          </AppBar>\r\n          );\r\n    }\r\n}\r\n\r\nexport default MainAppBar;\r\n*/\r\n\r\nimport React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function MainAppBar() {\r\n  const classes = useStyles();\r\n  const [auth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n// import Box from '@material-ui/core/Box';\r\n\r\nexport default function Copyright() {\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"body2\" color=\"textSecondary\"  align=\"center\">\r\n        {'Copyright © '}        \r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 225,\r\n    },\r\n    // media: {\r\n    //   height: 0,\r\n    //   paddingTop: '56.25%', // 16:9\r\n    // },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function PlayerCard() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            P1\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"John Smith\"\r\n        // subheader=\"September 14, 2016\"\r\n      />\r\n      {/* <CardMedia\r\n        className={classes.media}\r\n        image=\"/static/images/cards/paella.jpg\"\r\n        title=\"Paella dish\"\r\n      /> */}\r\n      {/* <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          This impressive paella is a perfect party dish and a fun meal to cook together with your\r\n          guests. Add 1 cup of frozen peas along with the mussels, if you like.\r\n        </Typography>\r\n      </CardContent> */}\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <Edit />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <Delete />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>John Albert Smith:</Typography>\r\n          <Typography paragraph>\r\n            Rating: 7.5\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Total Matches count: 15\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Win: 10\r\n          </Typography>\r\n          <Typography>\r\n            Lost: 5\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\n// import RootRef from '@material-ui/core/RootRef';\r\n\r\nimport PlayerCard from './PlayerCard';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: { \r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative'\r\n    },\r\n    rootBox: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n    playersBox: {\r\n      flexGrow: 1,\r\n      margin: theme.spacing(4)\r\n    },\r\n    teamsBox: {\r\n      flexGrow: 3,\r\n      margin: theme.spacing(4)\r\n    }\r\n  }));\r\n\r\nexport default function Dashboard() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={5} >\r\n          <Box className={classes.rootBox}>\r\n            <Box className={classes.playersBox}>\r\n              <Paper className={classes.paper} elevation={3} >\r\n                <PlayerCard/>\r\n              </Paper>\r\n            </Box>\r\n            <Box className={classes.teamsBox}>\r\n              <Paper className={classes.paper} elevation={3} >\r\n                \r\n              </Paper>\r\n            </Box>\r\n          </Box>\r\n        </Paper>\r\n    );\r\n\r\n\r\n}","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Box from '@material-ui/core/Box';\r\nimport { TextField, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n        height: '100%',\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        border: '2px solid',\r\n        borderRadius: 10,\r\n        borderColor: theme.palette.secondary.main,\r\n\r\n    },\r\n    mainBox: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        left: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        top: theme.spacing(2),\r\n        bottom: theme.spacing(2),\r\n        flexDirection: (wideScrenMode: Boolean) => wideScrenMode ? \"column\" : \"row\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    textField : {\r\n        margin: theme.spacing(3),        \r\n    }\r\n  }));\r\n\r\nexport default function DeveloperBoard() {\r\n    const wideScrenMode = useMediaQuery('(min-aspect-ratio: 8/5)');\r\n    const classes = useStyles(wideScrenMode);\r\n\r\n    return (\r\n        <Box p={4} m={2} className={classes.root}>\r\n            <Box className={classes.mainBox} p={4} m={2}>\r\n                <Box>\r\n                    <Button className={classes.button} variant=\"contained\" color=\"secondary\">Load</Button>\r\n                    <Button className={classes.button} variant=\"contained\" color=\"secondary\">Update</Button>\r\n                </Box>\r\n                <Box flexGrow=\"1\" display=\"flex\">\r\n                    <TextField color=\"secondary\"\r\n                        className={classes.textField}\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\"JSON\"\r\n                        multiline\r\n                        defaultValue=\"Default Value\"\r\n                        variant=\"outlined\"\r\n                        fullWidth={true}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            {/* <TextField color=\"secondary\"\r\n                className={classes.textField}\r\n                id=\"outlined-multiline-static\"\r\n                label=\"JSON\"\r\n                multiline\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n            /> */}\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport '../App.css';\r\nimport MainAppBar from './MainAppBar'\r\nimport Copyright from './Copyright';\r\nimport Dashboard from '../core/components/Dashboard';\r\nimport DeveloperBoard from './DeveloperBoard';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      position: 'absolute',\r\n      display:\"flex\", \r\n      flexDirection: \"column\",\r\n      bgcolor: \"background.paper\"\r\n    },    \r\n    mainPanel: {\r\n      flexGrow:1,\r\n      display:\"flex\", \r\n      flexDirection: (wideScrenMode: Boolean) => wideScrenMode ? \"row\" : \"column\",\r\n    },\r\n    dashboard: {\r\n      flexGrow: 6\r\n    },\r\n    developerBoard: {\r\n      flexGrow: 1,\r\n    }\r\n  }));\r\n\r\nexport default function HomePage() {\r\n    const wideScrenMode = useMediaQuery('(min-aspect-ratio: 8/5)');\r\n    const classes = useStyles(wideScrenMode);\r\n\r\n    return (\r\n      <Box className={classes.root}>\r\n        <Box p={2}>\r\n          <MainAppBar />\r\n        </Box>\r\n        <Box p={2} className={classes.mainPanel} >\r\n          <Box className={classes.dashboard}>\r\n            <Dashboard />\r\n          </Box>\r\n          <Box p={4} className={classes.developerBoard}>\r\n            <DeveloperBoard />\r\n          </Box>\r\n        </Box>\r\n        <Box p={2}>\r\n          <Copyright />\r\n        </Box>\r\n      </Box>\r\n    );\r\n}","import React from 'react';\n\nimport 'typeface-roboto';\n\nimport './App.css';\nimport HomePage from './components/Home';\n\nfunction App() {\n  return (\n  <HomePage/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import red from '@material-ui/core/colors/red';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#c9eb34',\r\n    },\r\n    secondary: {\r\n      main: '#9e8bf4',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff'\r\n    },    \r\n  },\r\n  spacing: 2\r\n});\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}